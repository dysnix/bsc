name: Docker

on:
  push:
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME: bsc

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
#          images: "${IMAGE_NAME}"
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          labels: |
            org.opencontainers.image.source=${{ secrets.IMAGE_SOURCE }}
            org.opencontainers.image.licenses=LGPL-3.0,GPL-3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


#  # Push image to GitHub Packages.
#  push:
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push'
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Build image
#        run: |
#            docker build . \
#            --label "org.opencontainers.image.source=${{ secrets.IMAGE_SOURCE }}" \
#            --label "org.opencontainers.image.revision=$(git rev-parse HEAD)" \
#            --label "org.opencontainers.image.version=$(git describe --tags --abbrev=0)" \
#            --label "org.opencontainers.image.licenses=LGPL-3.0,GPL-3.0" \
#            -f ./Dockerfile -t "${IMAGE_NAME}"
#
#      - name: Log into registry
#        run: echo "${{ secrets.PACKAGE_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#
#      - name: Push image
#        run: |
#          IMAGE_ID=ghcr.io/${{ github.repository }}
#
#          # Change all uppercase to lowercase
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#          # Strip git ref prefix from version
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#          # Strip "v" prefix from tag name
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          # Use Docker `latest` tag convention
#          [ "$VERSION" == "master" ] && VERSION=latest
#          echo IMAGE_ID=$IMAGE_ID
#          echo VERSION=$VERSION
#          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#          docker tag $IMAGE_NAME $IMAGE_ID:latest
#          docker push $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:latest
#